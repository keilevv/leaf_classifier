services:
  # Database
  db:
    image: postgres:15-alpine
    container_name: leaf-db
    env_file:
      - ./backend/.env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U leafuser -d leafapp"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - leaf-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: leaf-backend
    environment:
      - HOST=0.0.0.0
      - PORT=5000
    env_file:
      - ./backend/.env.prod
    volumes:
      - ./backend/prisma:/usr/src/app/prisma
    restart: unless-stopped
    ports:
      - '5000:5000'
    networks:
      - leaf-network
    command: >
      sh -c "bunx prisma generate &&
             bunx prisma migrate deploy &&
             bun run start"

  # Classifier Service
  classifier:
    build:
      context: ./classifier
      dockerfile: Dockerfile
    container_name: leaf-classifier
    restart: unless-stopped
    ports:
      - '8000:8000'
    networks:
      - leaf-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_API_URL: ${VITE_API_URL:-http://129.153.122.159:5000/api}
    container_name: leaf-frontend
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://129.153.122.159:5000/api}
    depends_on:
      - backend
    ports:
      - "80:80"
    env_file:
      - ./frontend/.env.prod
    volumes:
      - ./frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    networks:
      - leaf-network

networks:
  leaf-network:
    driver: bridge

volumes:
  postgres_data:
  frontend-dist:
